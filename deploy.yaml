apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nodejs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nodejs
    spec:
      containers:
        - name: nodongo
          image: docker.io/sssaini/node-server:latest
          # ports:
          #   - containerPort: 3000
      # imagePullSecrets:
      #   - name: regcred
---
kind: Service
apiVersion: v1
metadata:
  name: banana-service
spec:
  selector:
    app.kubernetes.io/name: nodejs
  ports:
    - port: 3000
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-nginx
  namespace: default
spec:
  # ACME issuer configuration
  # `email` - the email address to be associated with the ACME account (make sure it's a valid one)
  # `server` - the URL used to access the ACME serverâ€™s directory endpoint
  # `privateKeySecretRef` - Kubernetes Secret to store the automatically generated ACME account private key
  acme:
    email: sunnyashiin@gmail.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-nginx-private-key
    solvers:
      # Use the HTTP-01 challenge provider
      - http01:
          ingress:
            class: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-echo
  namespace: default
  annotations:
    cert-manager.io/issuer: letsencrypt-nginx
spec:
  tls:
    - hosts:
        - bearbill.com
      secretName: letsencrypt-nginx
  rules:
    - host: bearbill.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: banana-service
                port:
                  number: 3000
  ingressClassName: nginx
---

